{"ast":null,"code":"var _jsxFileName = \"/Users/athulkallungal/Desktop/new/fullStackOpen/part6.1-6.24/query-anecdote/src/App.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport NotificationContext from \"./NotificationContext\";\nimport AnecdoteForm from \"./components/AnecdoteForm\";\nimport Notification from \"./components/Notification\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { getAll, updateAnecdote } from \"./services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notification, dispatch] = useContext(NotificationContext);\n  const queryClient = useQueryClient();\n  const updateAnecdoteMutation = useMutation(updateAnecdote, {\n    onSuccess: updateAnecdote => {\n      const anecdotes = queryClient.getQueryData(\"anecdotes\");\n      const updated = anecdotes.map(a => a.id !== updateAnecdote.id ? a : updateAnecdote);\n      queryClient.setQueryData(\"anecdotes\", updated);\n    }\n  });\n  const handleVote = anecdote => {\n    updateAnecdoteMutation.mutate({\n      ...anecdote,\n      votes: anecdote.votes + 1\n    });\n    dispatch({\n      type: \"SET\",\n      payload: `anecdote ${anecdote.content} voted`\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"RESET\",\n        payload: \"\"\n      });\n    }, 5000);\n  };\n  const result = useQuery(\"anecdotes\", getAll, {\n    refetchOnWindowFocus: false\n  });\n  if (result.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading data ..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  } else if (result.error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"anecdote service not available due to problems in server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  const anecdotes = result.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Anecdote app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notification: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnecdoteForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), anecdotes.map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(anecdote),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DavslAdprcPgvsfc3OAk87IwLHs=\", false, function () {\n  return [useQueryClient, useMutation, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useContext","NotificationContext","AnecdoteForm","Notification","useQuery","useMutation","useQueryClient","getAll","updateAnecdote","App","notification","dispatch","queryClient","updateAnecdoteMutation","onSuccess","anecdotes","getQueryData","updated","map","a","id","setQueryData","handleVote","anecdote","mutate","votes","type","payload","content","setTimeout","result","refetchOnWindowFocus","isLoading","error","data"],"sources":["/Users/athulkallungal/Desktop/new/fullStackOpen/part6.1-6.24/query-anecdote/src/App.js"],"sourcesContent":["import { useContext } from \"react\";\nimport NotificationContext from \"./NotificationContext\";\nimport AnecdoteForm from \"./components/AnecdoteForm\";\nimport Notification from \"./components/Notification\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { getAll, updateAnecdote } from \"./services\";\n\nconst App = () => {\n  const [notification, dispatch] = useContext(NotificationContext);\n  const queryClient = useQueryClient();\n  const updateAnecdoteMutation = useMutation(updateAnecdote, {\n    onSuccess: (updateAnecdote) => {\n      const anecdotes = queryClient.getQueryData(\"anecdotes\");\n      const updated = anecdotes.map((a) =>\n        a.id !== updateAnecdote.id ? a : updateAnecdote\n      );\n      queryClient.setQueryData(\"anecdotes\", updated);\n    },\n  });\n\n  const handleVote = (anecdote) => {\n    updateAnecdoteMutation.mutate({ ...anecdote, votes: anecdote.votes + 1 });\n    dispatch({ type: \"SET\", payload: `anecdote ${anecdote.content} voted` });\n    setTimeout(() => {\n      dispatch({ type: \"RESET\", payload: \"\" });\n    }, 5000);\n  };\n\n  const result = useQuery(\"anecdotes\", getAll, {\n    refetchOnWindowFocus: false,\n  });\n\n  if (result.isLoading) {\n    return <div>loading data ..</div>;\n  } else if (result.error) {\n    return <div>anecdote service not available due to problems in server</div>;\n  }\n\n  const anecdotes = result.data;\n\n  return (\n    <div>\n      <h3>Anecdote app</h3>\n\n      <Notification notification={notification} />\n      <AnecdoteForm />\n\n      {anecdotes.map((anecdote) => (\n        <div key={anecdote.id}>\n          <div>{anecdote.content}</div>\n          <div>\n            has {anecdote.votes}\n            <button onClick={() => handleVote(anecdote)}>vote</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,QAAQ,EAAEC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACnE,SAASC,MAAM,EAAEC,cAAc,QAAQ,YAAY;AAAC;AAEpD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACC,mBAAmB,CAAC;EAChE,MAAMW,WAAW,GAAGN,cAAc,EAAE;EACpC,MAAMO,sBAAsB,GAAGR,WAAW,CAACG,cAAc,EAAE;IACzDM,SAAS,EAAGN,cAAc,IAAK;MAC7B,MAAMO,SAAS,GAAGH,WAAW,CAACI,YAAY,CAAC,WAAW,CAAC;MACvD,MAAMC,OAAO,GAAGF,SAAS,CAACG,GAAG,CAAEC,CAAC,IAC9BA,CAAC,CAACC,EAAE,KAAKZ,cAAc,CAACY,EAAE,GAAGD,CAAC,GAAGX,cAAc,CAChD;MACDI,WAAW,CAACS,YAAY,CAAC,WAAW,EAAEJ,OAAO,CAAC;IAChD;EACF,CAAC,CAAC;EAEF,MAAMK,UAAU,GAAIC,QAAQ,IAAK;IAC/BV,sBAAsB,CAACW,MAAM,CAAC;MAAE,GAAGD,QAAQ;MAAEE,KAAK,EAAEF,QAAQ,CAACE,KAAK,GAAG;IAAE,CAAC,CAAC;IACzEd,QAAQ,CAAC;MAAEe,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAG,YAAWJ,QAAQ,CAACK,OAAQ;IAAQ,CAAC,CAAC;IACxEC,UAAU,CAAC,MAAM;MACflB,QAAQ,CAAC;QAAEe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;IAC1C,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMG,MAAM,GAAG1B,QAAQ,CAAC,WAAW,EAAEG,MAAM,EAAE;IAC3CwB,oBAAoB,EAAE;EACxB,CAAC,CAAC;EAEF,IAAID,MAAM,CAACE,SAAS,EAAE;IACpB,oBAAO;MAAA,UAAK;IAAe;MAAA;MAAA;MAAA;IAAA,QAAM;EACnC,CAAC,MAAM,IAAIF,MAAM,CAACG,KAAK,EAAE;IACvB,oBAAO;MAAA,UAAK;IAAwD;MAAA;MAAA;MAAA;IAAA,QAAM;EAC5E;EAEA,MAAMlB,SAAS,GAAGe,MAAM,CAACI,IAAI;EAE7B,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eAErB,QAAC,YAAY;MAAC,YAAY,EAAExB;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5C,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAG,EAEfK,SAAS,CAACG,GAAG,CAAEK,QAAQ,iBACtB;MAAA,wBACE;QAAA,UAAMA,QAAQ,CAACK;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eAC7B;QAAA,WAAK,MACC,EAACL,QAAQ,CAACE,KAAK,eACnB;UAAQ,OAAO,EAAE,MAAMH,UAAU,CAACC,QAAQ,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACtD;IAAA,GALEA,QAAQ,CAACH,EAAE;MAAA;MAAA;MAAA;IAAA,QAOtB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAnDIX,GAAG;EAAA,QAEaH,cAAc,EACHD,WAAW,EAkB3BD,QAAQ;AAAA;AAAA,KArBnBK,GAAG;AAqDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}